{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/lib/mongodb.ts"],"sourcesContent":["import { MongoClient, Db } from 'mongodb';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nconst MONGODB_DB = process.env.MONGODB_DB;\n\nif (!MONGODB_URI) {\n  throw new Error(\n    'Please define the MONGODB_URI environment variable inside .env.local'\n  );\n}\n\nif (!MONGODB_DB) {\n  throw new Error(\n    'Please define the MONGODB_DB environment variable inside .env.local'\n  );\n}\n\nlet cachedClient: MongoClient | null = null;\nlet cachedDb: Db | null = null;\n\nexport async function connectToDatabase(): Promise<{ client: MongoClient; db: Db }> {\n  if (cachedClient && cachedDb) {\n    return { client: cachedClient, db: cachedDb };\n  }\n\n  const client = new MongoClient(MONGODB_URI!);\n\n  try {\n    await client.connect();\n    console.log(\"Successfully connected to MongoDB.\");\n  } catch (e) {\n    console.error(\"Failed to connect to MongoDB\", e);\n    throw e;\n  }\n  \n  const db = client.db(MONGODB_DB!);\n\n  cachedClient = client;\n  cachedDb = db;\n\n  return { client, db };\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAC3C,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MACR;AAEJ;AAEA,IAAI,CAAC,YAAY;IACf,MAAM,IAAI,MACR;AAEJ;AAEA,IAAI,eAAmC;AACvC,IAAI,WAAsB;AAEnB,eAAe;IACpB,IAAI,gBAAgB,UAAU;QAC5B,OAAO;YAAE,QAAQ;YAAc,IAAI;QAAS;IAC9C;IAEA,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC;IAE/B,IAAI;QACF,MAAM,OAAO,OAAO;QACpB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACR;IAEA,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,eAAe;IACf,WAAW;IAEX,OAAO;QAAE;QAAQ;IAAG;AACtB","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["\nimport NextAuth, { type NextAuthOptions } from 'next-auth';\nimport CredentialsProvider from 'next-auth/providers/credentials';\nimport bcrypt from 'bcryptjs';\nimport { connectToDatabase } from '@/lib/mongodb';\nimport type { UserDocument, UserRole } from '@/types';\n\nexport const authOptions: NextAuthOptions = {\n  session: {\n    strategy: 'jwt',\n  },\n  providers: [\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        email: { label: 'Email', type: 'email', placeholder: 'you@example.com' },\n        password: { label: 'Password', type: 'password' },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials.password) {\n          throw new Error('Please provide email and password.');\n        }\n\n        const { db } = await connectToDatabase();\n        const usersCollection = db.collection<UserDocument>('users');\n\n        const user = await usersCollection.findOne({ email: credentials.email });\n\n        if (!user) {\n          throw new Error('Invalid email or password.');\n        }\n\n        const passwordMatch = await bcrypt.compare(credentials.password, user.passwordHash);\n\n        if (!passwordMatch) {\n          throw new Error('Invalid email or password.');\n        }\n\n        // Return the user object that will be encoded in the JWT\n        return {\n          id: user._id!.toString(),\n          name: user.name,\n          email: user.email,\n          role: user.role, // Include the role\n          // Do not include passwordHash or other sensitive info\n        };\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user }) {\n      // user is only available on initial sign in\n      if (user) {\n        token.user = {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            role: user.role as UserRole, // Add role to token\n        };\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token && token.user && session.user) {\n        // Assign the custom user properties from the token to the session.user\n        // Ensure type compatibility defined in next-auth.d.ts\n        session.user = {\n            ...session.user, // Keep default session properties like name, email, image\n            id: (token.user as { id: string }).id, \n            role: (token.user as { role: UserRole }).role, // Add role to session\n        };\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: '/login', // Direct users to our custom login page\n    // error: '/login', // Optionally, direct users to login page on error\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n  // debug: process.env.NODE_ENV === 'development', // For debugging\n};\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;;;;;AAGO,MAAM,cAA+B;IAC1C,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;oBAAS,aAAa;gBAAkB;gBACvE,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,YAAY,QAAQ,EAAE;oBAChD,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,uHAAA,CAAA,oBAAiB,AAAD;gBACrC,MAAM,kBAAkB,GAAG,UAAU,CAAe;gBAEpD,MAAM,OAAO,MAAM,gBAAgB,OAAO,CAAC;oBAAE,OAAO,YAAY,KAAK;gBAAC;gBAEtE,IAAI,CAAC,MAAM;oBACT,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,gBAAgB,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,YAAY;gBAElF,IAAI,CAAC,eAAe;oBAClB,MAAM,IAAI,MAAM;gBAClB;gBAEA,yDAAyD;gBACzD,OAAO;oBACL,IAAI,KAAK,GAAG,CAAE,QAAQ;oBACtB,MAAM,KAAK,IAAI;oBACf,OAAO,KAAK,KAAK;oBACjB,MAAM,KAAK,IAAI;gBAEjB;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,4CAA4C;YAC5C,IAAI,MAAM;gBACR,MAAM,IAAI,GAAG;oBACT,IAAI,KAAK,EAAE;oBACX,MAAM,KAAK,IAAI;oBACf,OAAO,KAAK,KAAK;oBACjB,MAAM,KAAK,IAAI;gBACnB;YACF;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,MAAM,IAAI,IAAI,QAAQ,IAAI,EAAE;gBACvC,uEAAuE;gBACvE,sDAAsD;gBACtD,QAAQ,IAAI,GAAG;oBACX,GAAG,QAAQ,IAAI;oBACf,IAAI,AAAC,MAAM,IAAI,CAAoB,EAAE;oBACrC,MAAM,AAAC,MAAM,IAAI,CAAwB,IAAI;gBACjD;YACF;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IAEV;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AAErC;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}}]
}