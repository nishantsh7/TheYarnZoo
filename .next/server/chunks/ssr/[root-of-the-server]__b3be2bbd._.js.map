{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;;;;;;AACA;AAAA;;;AAEO,MAAM,KAAK,OAAO;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/ai/flows/intent-based-search.ts"],"sourcesContent":["// 'use server';\n\n/**\n * @fileOverview Implements intent-based search functionality using Genkit.\n *\n * - intentBasedSearch - A function that takes a user's search query and returns relevant product names.\n * - IntentBasedSearchInput - The input type for the intentBasedSearch function.\n * - IntentBasedSearchOutput - The return type for the intentBasedSearch function.\n */\n\n'use server';\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst IntentBasedSearchInputSchema = z.object({\n  query: z.string().describe('The user\\u2019s search query describing the desired toy.'),\n});\nexport type IntentBasedSearchInput = z.infer<typeof IntentBasedSearchInputSchema>;\n\nconst IntentBasedSearchOutputSchema = z.object({\n  productNames: z\n    .array(z.string())\n    .describe('An array of product names that are relevant to the search query.'),\n});\nexport type IntentBasedSearchOutput = z.infer<typeof IntentBasedSearchOutputSchema>;\n\nexport async function intentBasedSearch(input: IntentBasedSearchInput): Promise<IntentBasedSearchOutput> {\n  return intentBasedSearchFlow(input);\n}\n\nconst intentBasedSearchPrompt = ai.definePrompt({\n  name: 'intentBasedSearchPrompt',\n  input: {schema: IntentBasedSearchInputSchema},\n  output: {schema: IntentBasedSearchOutputSchema},\n  prompt: `You are an assistant that helps users find products based on their intent.\n\n  Given the following user query:\n  {{query}}\n\n  Return a list of product names that are relevant to the query.\n  The product names should be specific and come from the available products.\n  If no products are relevant, return an empty array.\n  Ensure that the product names are accurate and correspond to actual products.\n\n  Here are some examples:\n  User query: a small blue elephant for a baby\n  Product names: [\"Baby Blue Elephant\", \"Small Stuffed Elephant\"]\n\n  User query: a wooden train set for toddlers\n  Product names: [\"Classic Wooden Train Set\", \"Toddler Train Adventure\"]\n\n  User query: a pink unicorn for a girl\n  Product names: [\"Princess Unicorn\", \"Sparkle Unicorn\"]\n  `,\n});\n\nconst intentBasedSearchFlow = ai.defineFlow(\n  {\n    name: 'intentBasedSearchFlow',\n    inputSchema: IntentBasedSearchInputSchema,\n    outputSchema: IntentBasedSearchOutputSchema,\n  },\n  async input => {\n    const {output} = await intentBasedSearchPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB;;;;;;CAMC;;;;;AAID;;;;;;;;;;;AAGA,MAAM,+BAA+B,EAAE,MAAM,CAAC;IAC5C,OAAO,EAAE,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAGA,MAAM,gCAAgC,EAAE,MAAM,CAAC;IAC7C,cAAc,EACX,KAAK,CAAC,EAAE,MAAM,IACd,QAAQ,CAAC;AACd;AAGO,eAAe,kBAAkB,KAA6B;IACnE,OAAO,sBAAsB;AAC/B;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC9C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;EAmBT,CAAC;AACH;AAEA,MAAM,wBAAwB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACzC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,wBAAwB;IAC/C,OAAO;AACT;;;IAvCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/actions/searchActions.ts"],"sourcesContent":["'use server';\n\nimport { intentBasedSearch, type IntentBasedSearchInput, type IntentBasedSearchOutput } from '@/ai/flows/intent-based-search';\nimport { z } from 'zod';\n\nconst SearchActionInputSchema = z.object({\n  query: z.string().min(3, \"Search query must be at least 3 characters long.\"),\n});\n\nexport async function intentBasedSearchAction(input: IntentBasedSearchInput): Promise<IntentBasedSearchOutput> {\n  const validatedInput = SearchActionInputSchema.safeParse(input);\n  if (!validatedInput.success) {\n    // This error handling is basic. In a real app, you'd return structured errors.\n    throw new Error(validatedInput.error.errors.map(e => e.message).join(', '));\n  }\n\n  try {\n    const result = await intentBasedSearch(validatedInput.data);\n    return result;\n  } catch (error) {\n    console.error('Error in intentBasedSearchAction:', error);\n    // Consider returning a more user-friendly error structure\n    return { productNames: [] }; // Or throw a custom error\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEA,MAAM,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC3B;AAEO,eAAe,wBAAwB,KAA6B;IACzE,MAAM,iBAAiB,wBAAwB,SAAS,CAAC;IACzD,IAAI,CAAC,eAAe,OAAO,EAAE;QAC3B,+EAA+E;QAC/E,MAAM,IAAI,MAAM,eAAe,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO,EAAE,IAAI,CAAC;IACvE;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,+IAAA,CAAA,oBAAiB,AAAD,EAAE,eAAe,IAAI;QAC1D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,0DAA0D;QAC1D,OAAO;YAAE,cAAc,EAAE;QAAC,GAAG,0BAA0B;IACzD;AACF;;;IAfsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {intentBasedSearchAction as '40a9e8c2d31721e68706dcfc6d6074663f4da0ca8f'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;;;;;;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,QAAQ,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-muted hover:text-accent\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/components/products/ProductCard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/products/ProductCard.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/products/ProductCard.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2S,GACxU,yEACA","debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/components/products/ProductCard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/products/ProductCard.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/products/ProductCard.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuR,GACpT,qDACA","debugId":null}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/lib/mongodb.ts"],"sourcesContent":["import { MongoClient, Db } from 'mongodb';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nconst MONGODB_DB = process.env.MONGODB_DB;\n\nif (!MONGODB_URI) {\n  throw new Error(\n    'Please define the MONGODB_URI environment variable inside .env.local'\n  );\n}\n\nif (!MONGODB_DB) {\n  throw new Error(\n    'Please define the MONGODB_DB environment variable inside .env.local'\n  );\n}\n\nlet cachedClient: MongoClient | null = null;\nlet cachedDb: Db | null = null;\n\nexport async function connectToDatabase(): Promise<{ client: MongoClient; db: Db }> {\n  if (cachedClient && cachedDb) {\n    return { client: cachedClient, db: cachedDb };\n  }\n\n  const client = new MongoClient(MONGODB_URI!);\n\n  try {\n    await client.connect();\n    console.log(\"Successfully connected to MongoDB.\");\n  } catch (e) {\n    console.error(\"Failed to connect to MongoDB\", e);\n    throw e;\n  }\n  \n  const db = client.db(MONGODB_DB!);\n\n  cachedClient = client;\n  cachedDb = db;\n\n  return { client, db };\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAC3C,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MACR;AAEJ;AAEA,IAAI,CAAC,YAAY;IACf,MAAM,IAAI,MACR;AAEJ;AAEA,IAAI,eAAmC;AACvC,IAAI,WAAsB;AAEnB,eAAe;IACpB,IAAI,gBAAgB,UAAU;QAC5B,OAAO;YAAE,QAAQ;YAAc,IAAI;QAAS;IAC9C;IAEA,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC;IAE/B,IAAI;QACF,MAAM,OAAO,OAAO;QACpB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACR;IAEA,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,eAAe;IACf,WAAW;IAEX,OAAO;QAAE;QAAQ;IAAG;AACtB","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/lib/mock-data.ts"],"sourcesContent":["\nimport type { Product, Review } from '@/types';\nimport { connectToDatabase } from './mongodb'; // Import database connection\n\n// Note: This file is being refactored. \n// Mock data arrays (mockReviews, mockProducts) will be removed.\n// Functions will now fetch from MongoDB.\n\n// Helper function to convert MongoDB document to Product type\nfunction mapProductDocumentToProduct(doc: any): Product {\n  const averageRating = doc.reviews && doc.reviews.length > 0\n    ? doc.reviews.reduce((acc: number, review: Review) => acc + review.rating, 0) / doc.reviews.length\n    : 0;\n\n  return {\n    _id: doc._id?.toString(),\n    id: doc.slug, // Use slug as the public-facing ID\n    slug: doc.slug,\n    name: doc.name,\n    description: doc.description,\n    price: doc.price,\n    category: doc.category,\n    material: doc.material,\n    images: doc.images || [],\n    stock: doc.stock,\n    reviews: doc.reviews ? doc.reviews.map((r: any) => ({\n        ...r,\n        _id: r._id?.toString(),\n        // Ensure all review fields are present if they come from DB\n        id: r.id || r._id?.toString(), // Fallback if specific 'id' field is missing\n        date: r.date ? (r.date instanceof Date ? r.date.toISOString() : r.date) : new Date().toISOString(),\n    })) : [],\n    averageRating: parseFloat(averageRating.toFixed(1)),\n    createdAt: doc.createdAt,\n    updatedAt: doc.updatedAt,\n  };\n}\n\n\nexport async function getPublicProducts(): Promise<Product[]> {\n  try {\n    const { db } = await connectToDatabase();\n    const productDocs = await db.collection('products').find({}).sort({ createdAt: -1 }).toArray();\n    return productDocs.map(mapProductDocumentToProduct);\n  } catch (error) {\n    console.error(\"Error fetching public products:\", error);\n    return [];\n  }\n}\n\nexport async function getPublicProductBySlug(slug: string): Promise<Product | null> {\n  try {\n    const { db } = await connectToDatabase();\n    const productDoc = await db.collection('products').findOne({ slug });\n    if (!productDoc) return null;\n    return mapProductDocumentToProduct(productDoc);\n  } catch (error) {\n    console.error(`Error fetching product by slug ${slug}:`, error);\n    return null;\n  }\n}\n\nexport async function getCategories(): Promise<string[]> {\n  try {\n    const { db } = await connectToDatabase();\n    const categories = await db.collection('products').distinct('category');\n    return categories.filter(c => typeof c === 'string') as string[]; // Ensure only strings\n  } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n    return [];\n  }\n}\n\nexport async function getMaterials(): Promise<string[]> {\n  try {\n    const { db } = await connectToDatabase();\n    const materials = await db.collection('products').distinct('material');\n    return materials.filter(m => typeof m === 'string') as string[]; // Ensure only strings\n  } catch (error) {\n    console.error(\"Error fetching materials:\", error);\n    return [];\n  }\n}\n\nexport async function getFeaturedProducts(limit: number = 4): Promise<Product[]> {\n  try {\n    const { db } = await connectToDatabase();\n    // Simple implementation: fetch latest products. Could be based on a 'featured' flag later.\n    const productDocs = await db.collection('products').find({}).sort({ createdAt: -1 }).limit(limit).toArray();\n    return productDocs.map(mapProductDocumentToProduct);\n  } catch (error) {\n    console.error(\"Error fetching featured products:\", error);\n    return [];\n  }\n}\n\n// Old mock data and functions related to it are removed.\n// New functions fetch directly from MongoDB.\n"],"names":[],"mappings":";;;;;;;AAEA,4MAA+C,6BAA6B;;AAE5E,wCAAwC;AACxC,gEAAgE;AAChE,yCAAyC;AAEzC,8DAA8D;AAC9D,SAAS,4BAA4B,GAAQ;IAC3C,MAAM,gBAAgB,IAAI,OAAO,IAAI,IAAI,OAAO,CAAC,MAAM,GAAG,IACtD,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,KAAa,SAAmB,MAAM,OAAO,MAAM,EAAE,KAAK,IAAI,OAAO,CAAC,MAAM,GAChG;IAEJ,OAAO;QACL,KAAK,IAAI,GAAG,EAAE;QACd,IAAI,IAAI,IAAI;QACZ,MAAM,IAAI,IAAI;QACd,MAAM,IAAI,IAAI;QACd,aAAa,IAAI,WAAW;QAC5B,OAAO,IAAI,KAAK;QAChB,UAAU,IAAI,QAAQ;QACtB,UAAU,IAAI,QAAQ;QACtB,QAAQ,IAAI,MAAM,IAAI,EAAE;QACxB,OAAO,IAAI,KAAK;QAChB,SAAS,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAW,CAAC;gBAChD,GAAG,CAAC;gBACJ,KAAK,EAAE,GAAG,EAAE;gBACZ,4DAA4D;gBAC5D,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;gBACnB,MAAM,EAAE,IAAI,GAAI,EAAE,IAAI,YAAY,OAAO,EAAE,IAAI,CAAC,WAAW,KAAK,EAAE,IAAI,GAAI,IAAI,OAAO,WAAW;YACpG,CAAC,KAAK,EAAE;QACR,eAAe,WAAW,cAAc,OAAO,CAAC;QAChD,WAAW,IAAI,SAAS;QACxB,WAAW,IAAI,SAAS;IAC1B;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,qHAAA,CAAA,oBAAiB,AAAD;QACrC,MAAM,cAAc,MAAM,GAAG,UAAU,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE,GAAG,OAAO;QAC5F,OAAO,YAAY,GAAG,CAAC;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,EAAE;IACX;AACF;AAEO,eAAe,uBAAuB,IAAY;IACvD,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,qHAAA,CAAA,oBAAiB,AAAD;QACrC,MAAM,aAAa,MAAM,GAAG,UAAU,CAAC,YAAY,OAAO,CAAC;YAAE;QAAK;QAClE,IAAI,CAAC,YAAY,OAAO;QACxB,OAAO,4BAA4B;IACrC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC,EAAE;QACzD,OAAO;IACT;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,qHAAA,CAAA,oBAAiB,AAAD;QACrC,MAAM,aAAa,MAAM,GAAG,UAAU,CAAC,YAAY,QAAQ,CAAC;QAC5D,OAAO,WAAW,MAAM,CAAC,CAAA,IAAK,OAAO,MAAM,WAAuB,sBAAsB;IAC1F,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,EAAE;IACX;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,qHAAA,CAAA,oBAAiB,AAAD;QACrC,MAAM,YAAY,MAAM,GAAG,UAAU,CAAC,YAAY,QAAQ,CAAC;QAC3D,OAAO,UAAU,MAAM,CAAC,CAAA,IAAK,OAAO,MAAM,WAAuB,sBAAsB;IACzF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,EAAE;IACX;AACF;AAEO,eAAe,oBAAoB,QAAgB,CAAC;IACzD,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,qHAAA,CAAA,oBAAiB,AAAD;QACrC,2FAA2F;QAC3F,MAAM,cAAc,MAAM,GAAG,UAAU,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE,GAAG,KAAK,CAAC,OAAO,OAAO;QACzG,OAAO,YAAY,GAAG,CAAC;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,EAAE;IACX;AACF,EAEA,yDAAyD;CACzD,6CAA6C","debugId":null}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":["file:///home/user/TheYarnZoo/src/app/page.tsx"],"sourcesContent":["\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Button } from '@/components/ui/button';\nimport ProductCard from '@/components/products/ProductCard';\nimport { getFeaturedProducts } from '@/lib/mock-data'; // Corrected import path\nimport type { Product } from '@/types';\nimport { ArrowRight, Sparkles } from 'lucide-react';\n\nexport default async function HomePage() {\n  const featuredProducts = await getFeaturedProducts(4); // Fetch 4 featured products from DB\n\n  return (\n    <div className=\"space-y-16\">\n      {/* Hero Section */}\n      <section className=\"relative bg-gradient-to-r from-primary/30 via-background to-secondary/30 rounded-xl p-8 md:p-16 text-center overflow-hidden\">\n        <div className=\"absolute -top-10 -left-10 w-32 h-32 bg-accent/20 rounded-full filter blur-xl opacity-70 animate-pulse\"></div>\n        <div className=\"absolute -bottom-10 -right-10 w-40 h-40 bg-primary/30 rounded-full filter blur-xl opacity-70 animate-pulse delay-1000\"></div>\n        \n        <div className=\"relative z-10\">\n          <Sparkles className=\"mx-auto h-12 w-12 text-accent mb-4 animate-bounce\" />\n          <h1 className=\"text-4xl md:text-5xl font-headline font-bold text-gray-800 mb-6\">\n            Welcome to <span className=\"text-accent\">TheYarnZoo</span>!\n          </h1>\n          <p className=\"text-lg md:text-xl text-foreground max-w-2xl mx-auto mb-8\">\n            Discover unique, handcrafted crocheted toys made with love and the finest yarns. Perfect for gifts and collecting!\n          </p>\n          <Button size=\"lg\" asChild className=\"bg-accent hover:bg-accent/90 text-accent-foreground btn-subtle-animate shadow-lg\">\n            <Link href=\"/products\">\n              Explore Our Collection <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n        </div>\n      </section>\n\n      {/* Featured Products Section */}\n      <section>\n        <h2 className=\"text-3xl font-headline font-semibold text-center text-gray-700 mb-10\">Featured Toys</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 md:gap-8\">\n          {featuredProducts.map((product: Product) => (\n            <ProductCard key={product.id} product={product} />\n          ))}\n        </div>\n        {featuredProducts.length === 0 && (\n            <p className=\"text-center text-muted-foreground mt-6\">No featured products available at the moment. Check back soon!</p>\n        )}\n        <div className=\"text-center mt-10\">\n          <Button variant=\"outline\" size=\"lg\" asChild className=\"border-accent text-accent hover:bg-accent/10 btn-subtle-animate\">\n            <Link href=\"/products\">View All Products</Link>\n          </Button>\n        </div>\n      </section>\n\n      {/* About Us Snippet */}\n      <section id=\"about\" className=\"bg-card p-8 md:p-12 rounded-xl shadow-lg\">\n        <div className=\"max-w-3xl mx-auto text-center\">\n          <h2 className=\"text-3xl font-headline font-semibold text-gray-700 mb-6\">Handcrafted with Passion</h2>\n          <Image \n            src=\"https://res.cloudinary.com/djvwsukm2/image/upload/v1750182328/WhatsApp_Image_2025-06-17_at_22.54.25_3_-Photoroom_mqtkaz.png\" \n            alt=\"Penguin toy, handcrafted with passion\"\n            width={600} \n            height={300} \n            className=\"rounded-lg mx-auto mb-6 shadow-md\"\n            data-ai-hint=\"penguin toy\"\n          />\n          <p className=\"text-foreground mb-4\">\n            At TheYarnZoo, every toy is a work of art, meticulously crocheted by skilled artisans who pour their heart into each creation. We use only high-quality, child-safe materials to ensure your little ones can enjoy their new friends for years to come.\n          </p>\n          <Button variant=\"link\" asChild className=\"text-accent hover:text-accent/80 text-lg\">\n            <Link href=\"/about-us\">Learn More About Our Story</Link>\n          </Button>\n        </div>\n      </section>\n\n      {/* Contact Snippet / Newsletter */}\n      <section id=\"contact\" className=\"text-center py-12 bg-secondary/50 rounded-xl\">\n         <h2 className=\"text-3xl font-headline font-semibold text-gray-700 mb-4\">Stay in Touch!</h2>\n         <p className=\"text-foreground max-w-xl mx-auto mb-6\">\n           Join our newsletter for exclusive updates, new arrivals, and special discounts.\n         </p>\n         <form className=\"flex max-w-md mx-auto\">\n            <input type=\"email\" placeholder=\"Enter your email address\" className=\"py-3 px-4 rounded-l-md border-border focus:ring-accent focus:border-accent flex-grow\" />\n            <Button type=\"submit\" className=\"bg-primary hover:bg-primary/90 text-primary-foreground py-3 px-6 rounded-r-md btn-subtle-animate\">Subscribe</Button>\n         </form>\n      </section>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA,mNAAuD,wBAAwB;AAE/E;AAAA;;;;;;;;AAEe,eAAe;IAC5B,MAAM,mBAAmB,MAAM,CAAA,GAAA,0HAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,oCAAoC;IAE3F,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCAEf,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,0MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC;gCAAG,WAAU;;oCAAkE;kDACnE,8OAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAiB;;;;;;;0CAE5D,8OAAC;gCAAE,WAAU;0CAA4D;;;;;;0CAGzE,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAK,OAAO;gCAAC,WAAU;0CAClC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;;wCAAY;sDACE,8OAAC,kNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOrD,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAuE;;;;;;kCACrF,8OAAC;wBAAI,WAAU;kCACZ,iBAAiB,GAAG,CAAC,CAAC,wBACrB,8OAAC,6IAAA,CAAA,UAAW;gCAAkB,SAAS;+BAArB,QAAQ,EAAE;;;;;;;;;;oBAG/B,iBAAiB,MAAM,KAAK,mBACzB,8OAAC;wBAAE,WAAU;kCAAyC;;;;;;kCAE1D,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,MAAK;4BAAK,OAAO;4BAAC,WAAU;sCACpD,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAY;;;;;;;;;;;;;;;;;;;;;;0BAM7B,8OAAC;gBAAQ,IAAG;gBAAQ,WAAU;0BAC5B,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA0D;;;;;;sCACxE,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU;4BACV,gBAAa;;;;;;sCAEf,8OAAC;4BAAE,WAAU;sCAAuB;;;;;;sCAGpC,8OAAC,kIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAO,OAAO;4BAAC,WAAU;sCACvC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAY;;;;;;;;;;;;;;;;;;;;;;0BAM7B,8OAAC;gBAAQ,IAAG;gBAAU,WAAU;;kCAC7B,8OAAC;wBAAG,WAAU;kCAA0D;;;;;;kCACxE,8OAAC;wBAAE,WAAU;kCAAwC;;;;;;kCAGrD,8OAAC;wBAAK,WAAU;;0CACb,8OAAC;gCAAM,MAAK;gCAAQ,aAAY;gCAA2B,WAAU;;;;;;0CACrE,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,WAAU;0CAAmG;;;;;;;;;;;;;;;;;;;;;;;;AAK/I","debugId":null}}]
}