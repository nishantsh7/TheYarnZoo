{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport { getToken } from 'next-auth/jwt';\nimport type { UserRole } from '@/types';\n\nexport async function middleware(req: NextRequest) {\n  const token = await getToken({ req, secret: process.env.NEXTAUTH_SECRET });\n\n  const { pathname } = req.nextUrl;\n\n  // Protect /admin routes\n  if (pathname.startsWith('/admin')) {\n    if (!token) {\n      // If no token, redirect to login page\n      const loginUrl = new URL('/login', req.url);\n      loginUrl.searchParams.set('callbackUrl', pathname); // Pass the original path as callbackUrl\n      return NextResponse.redirect(loginUrl);\n    }\n\n    // If token exists, check role\n    const userRole = (token.user as { role?: UserRole } | undefined)?.role;\n    if (userRole !== 'admin') {\n      // If not admin, redirect to home page or a specific \"not authorized\" page\n      // For simplicity, redirecting to home for now.\n      // You could create a /unauthorized page and redirect there.\n      return NextResponse.redirect(new URL('/', req.url));\n    }\n  }\n\n  // Allow the request to proceed if no protection rules match\n  return NextResponse.next();\n}\n\n// Specify which paths the middleware should run on\nexport const config = {\n  matcher: ['/admin/:path*'], // Protect all routes under /admin\n};\n"],"names":[],"mappings":";;;;AACA;AAAA;AAEA;;;AAGO,eAAe,WAAW,GAAgB;IAC/C,MAAM,QAAQ,MAAM,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;QAAK,QAAQ,QAAQ,GAAG,CAAC,eAAe;IAAC;IAExE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAEhC,wBAAwB;IACxB,IAAI,SAAS,UAAU,CAAC,WAAW;QACjC,IAAI,CAAC,OAAO;YACV,sCAAsC;YACtC,MAAM,WAAW,IAAI,IAAI,UAAU,IAAI,GAAG;YAC1C,SAAS,YAAY,CAAC,GAAG,CAAC,eAAe,WAAW,wCAAwC;YAC5F,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,8BAA8B;QAC9B,MAAM,WAAY,MAAM,IAAI,EAAsC;QAClE,IAAI,aAAa,SAAS;YACxB,0EAA0E;YAC1E,+CAA+C;YAC/C,4DAA4D;YAC5D,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;QACnD;IACF;IAEA,4DAA4D;IAC5D,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAgB;AAC5B"}}]
}